(self.webpackChunkinspection_scheduler=self.webpackChunkinspection_scheduler||[]).push([[172],{80172:(e,s,t)=>{"use strict";t.r(s),t.d(s,{default:()=>a});var r=t(39105),o=t(52937),i=(t(36348),t(42766)),l=t(8985),c=t(44464),n=t(9628);const a=class{async decode(e){const s=await(0,l.J)(e.data,e.options);return s&&s.toJSON()}symbolize(e){e.pixelBlock=i.Z.fromJSON(e.pixelBlock),e.extent=e.extent?o.default.fromJSON(e.extent):null;const s=this.symbolizer.symbolize(e);return(0,r.resolve)(s&&s.toJSON())}async updateSymbolizer(e){var s;this.symbolizer=n.Z.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===(null==(s=this.symbolizer)?void 0:s.rendererJSON.type)&&(this.symbolizer.rendererJSON.histograms=e.histograms)}stretch(e){const s=this.symbolizer.simpleStretch(i.Z.fromJSON(e.srcPixelBlock),e.stretchParams);return(0,r.resolve)(s&&s.toJSON())}estimateStatisticsHistograms(e){const s=(0,c.Hv)(i.Z.fromJSON(e.srcPixelBlock));return(0,r.resolve)(s)}split(e){const s=(0,c.Vl)(i.Z.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel);return s&&s.forEach(((e,t)=>{s.set(t,null==e?void 0:e.toJSON())})),(0,r.resolve)(s)}async mosaicAndTransform(e){const s=e.srcPixelBlocks.map((e=>e?new i.Z(e):null)),t=(0,c.us)(s,e.srcMosaicSize);if(!e.coefs)return t&&t.toJSON();const r=(0,c.Uk)(t,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation);return r&&r.toJSON()}}}}]);
//# sourceMappingURL=172.js.map