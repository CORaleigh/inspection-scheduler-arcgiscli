(self.webpackChunkinspection_scheduler=self.webpackChunkinspection_scheduler||[]).push([[956],{50956:(e,a,r)=>{"use strict";r.r(a),r.d(a,{fromUrl:()=>u});var t=r(59472),n=r(32656),l=r(54721),s=r(97849),i=r(6357);async function u(e){const a=await async function(e){const a=(0,s.Qc)(e);if((0,t.Wi)(a))throw new n.Z("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:r,sublayer:l}=a;let u;const y={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(r){case"MapServer":u=null!=l?"FeatureLayer":async function(e){return(await d(e)).tileInfo}(e).then((e=>e?"TileLayer":"MapImageLayer"));break;case"ImageServer":u=d(e).then((e=>{const a=e.tileInfo&&e.tileInfo.format;return e.tileInfo?!a||"LERC"!==a.toUpperCase()||e.cacheType&&"elevation"!==e.cacheType.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer"}));break;case"SceneServer":u=d(a.url.path).then((e=>{const a={Point:"SceneLayer","3DObject":"SceneLayer",IntegratedMesh:"IntegratedMeshLayer",PointCloud:"PointCloudLayer",Building:"BuildingSceneLayer"};if(e&&Array.isArray(e.layers)&&e.layers.length>0){const r=e.layers[0].layerType;if(null!=a[r])return a[r]}return"SceneLayer"}));break;default:u=y[r]}const c="FeatureServer"===r,f={parsedUrl:a,Constructor:null,layerOrTableId:c?l:null,sublayerIds:null,tableIds:null},b=await u;if({FeatureLayer:!0,SceneLayer:!0}[b]&&null==l){const a=await async function(e,a){var r,t;let n,l=!1;if("FeatureServer"===a){const a=await async function(e){var a,r;let t=await d(e);t=t||{},t.layers=(null==(a=t.layers)?void 0:a.filter(o))||[];const n={serviceJSON:t};if(t.currentVersion<10.5)return n;const l=await d(e+"/layers");return n.layersJSON={layers:(null==l||null==(r=l.layers)?void 0:r.filter(o))||[],tables:(null==l?void 0:l.tables)||[]},n}(e);l=!!a.layersJSON,n=a.layersJSON||a.serviceJSON}else n=await d(e);const s=null==(r=n)?void 0:r.layers,i=null==(t=n)?void 0:t.tables;return{layerIds:(null==s?void 0:s.map((e=>e.id)).reverse())||[],tableIds:(null==i?void 0:i.map((e=>e.id)).reverse())||[],layerInfos:l?s:[],tableInfos:l?i:[]}}(e,r);if(c&&(f.sublayerInfos=a.layerInfos,f.tableInfos=a.tableInfos),1!==a.layerIds.length+a.tableIds.length)f.sublayerIds=a.layerIds,f.tableIds=a.tableIds;else if(c){var h,w;f.layerOrTableId=null!=(h=a.layerIds[0])?h:a.tableIds[0],f.sourceJSON=null!=(w=a.layerInfos[0])?w:a.tableInfos[0]}}return f.Constructor=await async function(e){return(0,i.T[e])()}(b),f}(e.url),l={...e.properties,url:e.url};if(!a.sublayerIds)return null!=a.layerOrTableId&&(l.layerId=a.layerOrTableId,l.sourceJSON=a.sourceJSON),new a.Constructor(l);const u=new(0,(await r.e(9647).then(r.bind(r,19647))).default)({title:a.parsedUrl.title});return function(e,a,r){function n(e,n){const l={...r,layerId:e,sublayerTitleMode:"service-name"};return(0,t.pC)(n)&&(l.sourceJSON=n),new a.Constructor(l)}a.sublayerIds.forEach((r=>{const t=n(r,y(a.sublayerInfos,r));e.add(t)})),a.tableIds.forEach((r=>{const t=n(r,y(a.tableInfos,r));e.tables.add(t)}))}(u,a,l),u}function y(e,a){return e?e.find((e=>e.id===a)):null}function o(e){return!e.type||"Feature Layer"===e.type}async function d(e){return(await(0,l.default)(e,{responseType:"json",query:{f:"json"}})).data}},6357:(e,a,r)=>{"use strict";r.d(a,{T:()=>t});const t={BingMapsLayer:async()=>(await r.e(2081).then(r.bind(r,42081))).default,BuildingSceneLayer:async()=>(await Promise.all([r.e(7586),r.e(1318)]).then(r.bind(r,31318))).default,CSVLayer:async()=>(await r.e(4479).then(r.bind(r,54479))).default,ElevationLayer:async()=>(await r.e(7790).then(r.bind(r,87790))).default,FeatureLayer:async()=>(await Promise.resolve().then(r.bind(r,76603))).default,GroupLayer:async()=>(await r.e(9647).then(r.bind(r,19647))).default,GeoRSSLayer:async()=>(await r.e(2303).then(r.bind(r,32303))).default,ImageryLayer:async()=>(await Promise.all([r.e(4464),r.e(6399),r.e(2803),r.e(928)]).then(r.bind(r,20928))).default,ImageryTileLayer:async()=>(await Promise.all([r.e(4464),r.e(6399),r.e(2803),r.e(9866)]).then(r.bind(r,69866))).default,IntegratedMeshLayer:async()=>(await Promise.all([r.e(7586),r.e(9640)]).then(r.bind(r,69640))).default,KMLLayer:async()=>(await r.e(6184).then(r.bind(r,66184))).default,MapImageLayer:async()=>(await r.e(2933).then(r.bind(r,62933))).default,MapNotesLayer:async()=>(await r.e(2386).then(r.bind(r,42386))).default,OpenStreetMapLayer:async()=>(await r.e(8742).then(r.bind(r,68742))).default,PointCloudLayer:async()=>(await r.e(8342).then(r.bind(r,78342))).default,RouteLayer:async()=>(await r.e(3504).then(r.bind(r,53504))).default,SceneLayer:async()=>(await Promise.all([r.e(7586),r.e(3687)]).then(r.bind(r,93687))).default,StreamLayer:async()=>(await r.e(5034).then(r.bind(r,65034))).default,TileLayer:async()=>(await Promise.resolve().then(r.bind(r,66416))).default,UnknownLayer:async()=>(await r.e(2095).then(r.bind(r,32095))).default,UnsupportedLayer:async()=>(await r.e(1983).then(r.bind(r,51983))).default,VectorTileLayer:async()=>(await Promise.resolve().then(r.bind(r,57680))).default,WebTileLayer:async()=>(await r.e(6601).then(r.bind(r,16601))).default,WMSLayer:async()=>(await r.e(5612).then(r.bind(r,5612))).default,WMTSLayer:async()=>(await r.e(5155).then(r.bind(r,65155))).default}}}]);
//# sourceMappingURL=956.js.map