(self.webpackChunkinspection_scheduler=self.webpackChunkinspection_scheduler||[]).push([[1512],{31512:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>Z});var i=t(56140),s=(t(95830),t(36544),t(68055),t(79881)),o=t(87566),a=(t(10923),t(57002),t(86035),t(39105)),n=t(54721),l=t(91535),u=t(95986),p=t(47977),c=t(10532),d=t(59472),y=t(30590),f=t(58385),h=t(73032),m=t(61106),B=t(53817),_=t(93833),b=(t(36348),t(15988)),g=t(76194),C=t(69489),v=t(36405);function k(e){return g.default.fromJSON(e).features.map((e=>e.geometry))}let R=class extends f.wq{constructor(e){super(e),this.directions=null,this.facilities=null,this.incidents=null,this.messages=null,this.pointBarriers=null,this.polylineBarriers=null,this.polygonBarriers=null,this.routes=null}readFacilities(e){return k(e)}readIncidents(e){return k(e)}readPointBarriers(e,r){return k(r.barriers)}readPolylineBarriers(e){return k(e)}readPolygonBarriers(e){return k(e)}readRoutes(e){return function(e){return e.features.map((r=>{const t=h.Z.fromJSON(e.spatialReference),i=b.default.fromJSON(r);return(0,d.pC)(i.geometry)&&(i.geometry.spatialReference=t),i}))}(e)}};(0,i._)([(0,s.Cb)({type:[C.Z]})],R.prototype,"directions",void 0),(0,i._)([(0,s.Cb)({type:[m.default]})],R.prototype,"facilities",void 0),(0,i._)([(0,y.r)("facilities")],R.prototype,"readFacilities",null),(0,i._)([(0,s.Cb)({type:[m.default]})],R.prototype,"incidents",void 0),(0,i._)([(0,y.r)("incidents")],R.prototype,"readIncidents",null),(0,i._)([(0,s.Cb)({type:[v.Z]})],R.prototype,"messages",void 0),(0,i._)([(0,s.Cb)({type:[m.default]})],R.prototype,"pointBarriers",void 0),(0,i._)([(0,y.r)("pointBarriers",["barriers"])],R.prototype,"readPointBarriers",null),(0,i._)([(0,s.Cb)({type:[_.Z]})],R.prototype,"polylineBarriers",void 0),(0,i._)([(0,y.r)("polylineBarriers")],R.prototype,"readPolylineBarriers",null),(0,i._)([(0,s.Cb)({type:[B.Z]})],R.prototype,"polygonBarriers",void 0),(0,i._)([(0,y.r)("polygonBarriers")],R.prototype,"readPolygonBarriers",null),(0,i._)([(0,s.Cb)({type:[b.default]})],R.prototype,"routes",void 0),(0,i._)([(0,y.r)("routes")],R.prototype,"readRoutes",null),R=(0,i._)([(0,o.j)("esri.tasks.support.ClosestFacilitySolveResult")],R);const A=R,P=(0,p.E)({accumulateAttributes:{name:"accumulateAttributeNames"},attributeParameterValues:!0,directionsTimeAttribute:{name:"directionsTimeAttributeName"},impedanceAttribute:{name:"impedanceAttributeName"},facilities:!0,incidents:!0,outSpatialReference:{name:"outSR",getter:e=>e.outSpatialReference.wkid},pointBarriers:{name:"barriers"},polylineBarriers:!0,polygonBarriers:!0,restrictionAttributes:{name:"restrictionAttributeNames"},returnPointBarriers:{name:"returnBarriers"},returnRoutes:{name:"returnCFRoutes"},travelMode:!0});let S=class extends((0,c.Y)(u.Z)){constructor(e){super(e),this.url=null}solve(e,r){const t=[],i=[],s={},o={};return e.incidents&&e.incidents.features&&this._collectGeometries(e.incidents.features,i,"incidents.features",s),e.facilities&&e.facilities.features&&this._collectGeometries(e.facilities.features,i,"facilities.features",s),e.pointBarriers&&e.pointBarriers.features&&this._collectGeometries(e.pointBarriers.features,i,"pointBarriers.features",s),e.polylineBarriers&&e.polylineBarriers.features&&this._collectGeometries(e.polylineBarriers.features,i,"polylineBarriers.features",s),e.polygonBarriers&&e.polygonBarriers.features&&this._collectGeometries(e.polygonBarriers.features,i,"polygonBarriers.features",s),(0,l.aX)(i).then((e=>{for(const r in s){const i=s[r];t.push(r),o[r]=e.slice(i[0],i[1])}return this._isInputGeometryZAware(o,t)?this.getServiceDescription():(0,a.DB)({dontCheck:!0})})).then((i=>{("dontCheck"in i?i.dontCheck:i.hasZ)||this._dropZValuesOffInputGeometry(o,t);for(const r in o)o[r].forEach(((t,i)=>{e.get(r)[i].geometry=t}));let s={query:{...this.parsedUrl.query,f:"json",...P.toQueryParams(e)}};return(this.requestOptions||r)&&(s={...this.requestOptions,...r,...s}),(0,n.default)(`${this.parsedUrl.path}/solveClosestFacility`,s)})).then((e=>A.fromJSON(e.data)))}_collectGeometries(e,r,t,i){i[t]=[r.length,r.length+e.length],e.forEach((e=>{r.push(e.geometry)}))}};(0,i._)([(0,s.Cb)()],S.prototype,"url",void 0),S=(0,i._)([(0,o.j)("esri.tasks.ClosestFacilityTask")],S);const Z=S}}]);
//# sourceMappingURL=1512.js.map