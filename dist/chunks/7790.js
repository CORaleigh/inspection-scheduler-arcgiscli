(self.webpackChunkinspection_scheduler=self.webpackChunkinspection_scheduler||[]).push([[7790],{87790:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>x});var i=r(56140),s=(r(95830),r(59472)),a=r(36544),o=(r(68055),r(79881)),n=r(30590),l=r(87566),h=r(32656),c=r(10923),d=(r(57002),r(86035),r(39105)),p=r(54721),u=r(56700),y=r(43072),v=r(19048),m=r(18152),g=r(78910),_=r(48899),f=r(33716),w=r(54856),b=r(46627);const S=a.Z.getLogger("esri.views.3d.support.WorkerHandle");class C extends class{constructor(e,t,r,i={}){this._methodName=t,this._promise=(0,b.bA)(e,{...i,scheduler:r}).then((e=>{void 0===this._thread?(this._thread=e,this._promise=null,i.hasInitialize&&this.broadcast({},"initialize")):e.close()})),this._promise.catch((t=>S.error(`Failed to initialize ${e} worker: ${t}`)))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){if(this._thread){const r=this.getTransferList(e);return this._thread.invoke(this._methodName,e,{transferList:r,signal:t})}return this._promise?this._promise.then((()=>((0,d.k_)(t),this.invoke(e,t)))):(0,d.d1)(null)}broadcast(e,t){return this._thread?(0,d.$6)(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):(0,d.d1)()}get promise(){return this._promise}}{constructor(e){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.scheduler=e}decode(e,t,r){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},r):(0,d.DB)(null)}getTransferList(e){return[e.buffer]}}const T=new Map;const k=a.Z.getLogger("esri.layers.ElevationLayer");let I=class extends((0,w.Z)((0,_.Y)((0,g.q)((0,f.I)((0,y.R)(u.Z)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(e){let t=T.get(e);return t||(t={instance:new C(e),ref:0},T.set(e,t)),++t.ref,t.instance}()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){(function(e){if(null==e)return;const t=e.scheduler,r=T.get(t);r&&--r.ref<=0&&(r.instance.destroy(),T.delete(t))})(this._lercDecoder),this._lercDecoder=null}set minScale(e){this.constructed&&k.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&k.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=(0,s.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new h.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).then((()=>this._fetchImageService(t)),(()=>this._fetchImageService(t)))),(0,d.DB)(this)}fetchTile(e,t,r,i){const a=(0,s.pC)((i=i||{signal:null}).signal)?i.signal:i.signal=(0,d.yi)().signal,o={responseType:"array-buffer",signal:a},n={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,r,i))).then((()=>(0,p.default)(this.getTileUrl(e,t,r),o))).then((e=>this._lercDecoder.decode(e.data,n,a))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,r){const i=!this.tilemapCache&&this.supportsBlankTile,s=(0,c.B7)({...this.parsedUrl.query,blankTile:!i&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${s?"?"+s:""}`}async queryElevation(e,t){const{ElevationQuery:i}=await r.e(3549).then(r.bind(r,93549));return(0,d.k_)(t),(new i).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:i}=await r.e(3549).then(r.bind(r,93549));return(0,d.k_)(t),(new i).createSampler(this,e,t)}_fetchTileAvailability(e,t,r,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,i):(0,d.DB)("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},r=await(0,p.default)(this.parsedUrl.path,t);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}};(0,i._)([(0,o.Cb)({json:{read:{source:"copyrightText"}}})],I.prototype,"copyright",void 0),(0,i._)([(0,o.Cb)({readOnly:!0,type:v.Z})],I.prototype,"heightModelInfo",void 0),(0,i._)([(0,o.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],I.prototype,"path",void 0),(0,i._)([(0,o.Cb)({type:["show","hide"]})],I.prototype,"listMode",void 0),(0,i._)([(0,o.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],I.prototype,"minScale",null),(0,i._)([(0,o.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],I.prototype,"maxScale",null),(0,i._)([(0,o.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],I.prototype,"opacity",void 0),(0,i._)([(0,o.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],I.prototype,"operationalLayerType",void 0),(0,i._)([(0,o.Cb)()],I.prototype,"sourceJSON",void 0),(0,i._)([(0,o.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],I.prototype,"type",void 0),(0,i._)([(0,o.Cb)(m.HQ)],I.prototype,"url",void 0),(0,i._)([(0,o.Cb)()],I.prototype,"version",void 0),(0,i._)([(0,n.r)("version",["currentVersion"])],I.prototype,"readVersion",null),I=(0,i._)([(0,l.j)("esri.layers.ElevationLayer")],I);const x=I}}]);
//# sourceMappingURL=7790.js.map