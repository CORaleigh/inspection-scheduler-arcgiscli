(self.webpackChunkinspection_scheduler=self.webpackChunkinspection_scheduler||[]).push([[928],{20928:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>Qe});var i,n=r(56140),s=(r(95830),r(59472)),a=r(36544),o=r(68055),l=r(79881),u=r(87566),p=r(60538),c=r(10923),d=(r(57002),r(86035),r(39105)),m=r(58484),h=r(56700),y=r(43072),f=r(18152),g=r(78910),b=r(48899),v=r(57407),R=r(33716),w=r(2194),_=r(10113),x=r(2584),S=r(43551),I=r(82550),C=r(51894),N=r(56274),O=r(30590),T=r(32656),F=r(73032),j=r(61106),P=r(52937),D=r(53817),M=(r(36348),r(54721)),A=r(15988),V=r(42766),J=r(99657),z=r(70834),E=r(61121),L=r(76194),k=r(31518),q=r(92551),U=r(50557),Z=r(9870),B=r(58385);const Q=new Set(["Raster","Raster2","DEM","FillRaster"]),H=new Set(["Rasters"]),G=e=>e&&e.rasterFunction?Y.fromJSON(e):e,W=e=>e&&e instanceof Y?e.toJSON():e;var X;!function(e){e[e.MOSAIC=0]="MOSAIC",e[e.GROUP=1]="GROUP",e[e.ITEM=2]="ITEM"}(X||(X={}));let Y=i=class extends B.wq{constructor(e){super(e),this.functionArguments=null,this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.description=null,this.functionDefinition=null,this.thumbnail=null}readFunctionArguments(e,t){return(e=>{if(null==e)return null;const t={};for(const r of Object.keys(e))Q.has(r)?t[r]=G(e[r]):H.has(r)&&Array.isArray(e[r])?t[r]=e[r].map(G):t[r]=e[r];return t})(t.arguments||t.rasterFunctionArguments)}writeFunctionArguments(e,t,r){const i={};for(const t of Object.keys(e))Q.has(t)?i[t]=W(e[t]):H.has(t)&&Array.isArray(e[t])?i[t]=e[t].map(W):i[t]=W(e[t]);this.functionDefinition?t.arguments=i:t[r]=i}readFunctionName(e,t){const r=t.rasterFunctionInfos;return t.name||(r&&r.length&&"None"!==r[0].name?r[0].name:t.rasterFunction)}writeFunctionName(e,t,r){this.functionDefinition?t.name=e:t[r]=e}readFunctionType(e){return X[e]}writeFunctionType(e,t,r){t[r]=X[e]}clone(){return new i({functionName:this.functionName,functionArguments:(0,I.d9)(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,description:this.description,functionType:this.functionType,functionDefinition:this.functionDefinition,thumbnail:this.thumbnail})}};(0,n._)([(0,l.Cb)({json:{type:Object,write:{target:"rasterFunctionArguments"}}})],Y.prototype,"functionArguments",void 0),(0,n._)([(0,O.r)("functionArguments",["rasterFunctionArguments","arguments"])],Y.prototype,"readFunctionArguments",null),(0,n._)([(0,p.c)("functionArguments")],Y.prototype,"writeFunctionArguments",null),(0,n._)([(0,l.Cb)({json:{type:String,write:{target:"rasterFunction"}}})],Y.prototype,"functionName",void 0),(0,n._)([(0,O.r)("functionName",["rasterFunction","rasterFunctionInfos","name"])],Y.prototype,"readFunctionName",null),(0,n._)([(0,p.c)("functionName")],Y.prototype,"writeFunctionName",null),(0,n._)([(0,Z.J)({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),(0,l.Cb)({json:{default:"unknown"}})],Y.prototype,"outputPixelType",void 0),(0,n._)([(0,l.Cb)({type:String,json:{read:!0,write:!0}})],Y.prototype,"variableName",void 0),(0,n._)([(0,l.Cb)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],Y.prototype,"description",void 0),(0,n._)([(0,l.Cb)({json:{origins:{"web-document":{read:!1,write:!1}}}})],Y.prototype,"functionType",void 0),(0,n._)([(0,O.r)("functionType")],Y.prototype,"readFunctionType",null),(0,n._)([(0,p.c)("functionType")],Y.prototype,"writeFunctionType",null),(0,n._)([(0,l.Cb)({type:Object,json:{read:{source:"function"},write:{target:"function"},origins:{"web-document":{read:!1,write:!1}}}})],Y.prototype,"functionDefinition",void 0),(0,n._)([(0,l.Cb)({type:String,json:{read:!0,write:!0,origins:{"web-document":{read:!1,write:!1}}}})],Y.prototype,"thumbnail",void 0),Y=i=(0,n._)([(0,u.j)("esri.layers.support.RasterFunction")],Y);const $=Y;var K=r(91676),ee=r(10623),te=r(12760);const re={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34e38,34e38],f64:[-Number.MAX_VALUE,Number.MAX_VALUE]},ie={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ne=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function se(e){return ne.has(e.type)}function ae(e,t){if(!e||!t)return(0,I.d9)(e||t);const r=(0,I.d9)(e);return"none"!==t.functionName.toLowerCase()&&(oe(r.functionArguments).Raster=t),r}function oe(e){const t=e.Raster;return t&&"esri.layers.support.RasterFunction"===t.declaredClass?oe(t.functionArguments):e}const le={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function ue(e,t){const r=re[String(t).toLowerCase()];return r&&e.push([Math.floor(r[0]-1),0,0,0],[Math.ceil(r[1]+1),0,0,0]),e}function pe(e){if(!e)return;const{fields:t}=e,r=t&&t.find((e=>e&&e.name&&"value"===e.name.toLowerCase()));return r&&r.name}var ce,de=r(60263);const me=(0,N.wY)()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),he=(0,N.wY)()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});let ye=ce=class extends B.wq{constructor(e){super(e),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending}readMethod(e,t){return function(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;case"none":default:t="esriMosaicNone"}return he.fromJSON(t)}(t.mosaicMethod||t.defaultMosaicMethod)}readOperation(e,t){const r=t.mosaicOperation,i=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),n=r||(i?me.toJSON(i):null);return me.fromJSON(n)||"first"}castSortValue(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`}clone(){return new ce({ascending:this.ascending,itemRenderingRule:(0,I.d9)(this.itemRenderingRule),lockRasterIds:(0,I.d9)(this.lockRasterIds),method:this.method,multidimensionalDefinition:(0,I.d9)(this.multidimensionalDefinition),objectIds:(0,I.d9)(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:(0,I.d9)(this.viewpoint),where:this.where})}};(0,n._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],ye.prototype,"ascending",void 0),(0,n._)([(0,O.r)("ascending",["ascending","sortAscending"])],ye.prototype,"readAscending",null),(0,n._)([(0,l.Cb)({type:$,json:{write:!0}})],ye.prototype,"itemRenderingRule",void 0),(0,n._)([(0,l.Cb)({type:[o.z8],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],ye.prototype,"lockRasterIds",void 0),(0,n._)([(0,l.Cb)({type:String,json:{type:he.jsonValues,write:{target:"mosaicMethod",writer:he.write}}})],ye.prototype,"method",void 0),(0,n._)([(0,O.r)("method",["mosaicMethod","defaultMosaicMethod"])],ye.prototype,"readMethod",null),(0,n._)([(0,l.Cb)({type:[U.Z],json:{write:!0}})],ye.prototype,"multidimensionalDefinition",void 0),(0,n._)([(0,l.Cb)({type:[o.z8],json:{name:"fids",write:!0}})],ye.prototype,"objectIds",void 0),(0,n._)([(0,l.Cb)({json:{type:me.jsonValues,read:{reader:me.read},write:{target:"mosaicOperation",writer:me.write}}})],ye.prototype,"operation",void 0),(0,n._)([(0,O.r)("operation",["mosaicOperation","mosaicOperator"])],ye.prototype,"readOperation",null),(0,n._)([(0,l.Cb)({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],ye.prototype,"sortField",void 0),(0,n._)([(0,l.Cb)({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],ye.prototype,"sortValue",void 0),(0,n._)([(0,de.p)("sortValue")],ye.prototype,"castSortValue",null),(0,n._)([(0,l.Cb)({type:j.Z,json:{write:!0}})],ye.prototype,"viewpoint",void 0),(0,n._)([(0,l.Cb)({type:String,json:{write:!0}})],ye.prototype,"where",void 0),ye=ce=(0,n._)([(0,u.j)("esri.layers.support.MosaicRule")],ye);const fe=ye,ge=new N.Xn({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),be=new N.Xn({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"});let ve=class extends B.wq{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(e,t,r){this.layer.version<10.3||(t[r]=e)}writeCompressionQuality(e,t,r){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&null!=e&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}writeLercVersion(e,t,r){"lerc"===this.format&&this.layer.version>=10.5&&(t[r]=e)}get version(){const e=this.layer;return e.bandIds,e.format,e.compressionQuality,e.compressionTolerance,e.interpolation,e.noData,e.noDataInterpretation,e.mosaicRule,e.renderingRule,e.adjustAspectRatio,e.pixelFilter,e.renderer,e.definitionExpression,(this._get("version")||0)+1}set version(e){this._set("version",e)}get mosaicRule(){const e=this.layer;let t=e.mosaicRule;const r=e.definitionExpression;return t?r&&r!==t.where&&(t=t.clone(),t.where=r):r&&(t=new fe({where:r})),t}get renderingRule(){const e=this.layer;let t=e.renderingRule;const r=e.pixelFilter,i=!e.format||e.format.indexOf("jpg")>-1||e.format.indexOf("png")>-1;return t=this._addResampleRasterFunction(t),i&&!r&&(t=this.combineRendererWithRenderingRule()),t}combineRendererWithRenderingRule(){var e;const t=this.layer,{rasterInfo:r,renderingRule:i,renderer:n}=t;return n&&se(n)?ae(function(e,t){switch(t=t||{},e.type){case"raster-stretch":return function(e,t){const r=new $;r.functionName="Stretch";const i=le[te.v.toJSON(e.stretchType)],n="u8",s={StretchType:i,Statistics:function(e){const t=[];return e.forEach((e=>{const r=e;if(Array.isArray(r))t.push(r);else{if(null==r.min||null==r.max)return;const e=[r.min,r.max,r.avg||0,r.stddev||0];t.push(e)}})),t}(e.statistics),DRA:e.dynamicRangeAdjustment,UseGamma:e.useGamma,Gamma:e.gamma,ComputeGamma:e.computeGamma};if(null!=e.outputMin&&(s.Min=e.outputMin),null!=e.outputMax&&(s.Max=e.outputMax),i===le.standardDeviation?(s.NumberOfStandardDeviations=e.numberOfStandardDeviations,r.outputPixelType=n):i===le.percentClip?(s.MinPercent=e.minPercent,s.MaxPercent=e.maxPercent,r.outputPixelType=n):i===le.minMax?r.outputPixelType=n:i===le.sigmoid&&(s.SigmoidStrengthLevel=e.sigmoidStrengthLevel),r.functionArguments=s,r.variableName="Raster",e.colorRamp){const i=e.colorRamp,n=new $,s=(0,ee.Uh)(i);return s?n.functionArguments={colorRamp:s}:!t.convertColorRampToColormap||"algorithmic"!==i.type&&"multipart"!==i.type?n.functionArguments={colorRamp:e.colorRamp.toJSON()}:n.functionArguments={Colormap:(0,ee.Jw)(i,256)},n.variableName="Raster",n.functionName="Colormap",n.functionArguments.Raster=r,n}return r}(e,t);case"class-breaks":return function(e,t){const r=[],i=[],n=[],s=[],a=1e-6,{pixelType:o,rasterAttributeTable:l}=t,u=l&&l.features,p=pe(l);if(u&&Array.isArray(u)&&e.classBreakInfos){e.classBreakInfos.forEach(((t,r)=>{const i=t.symbol.color;let n;i.a&&u.forEach((a=>{n=a.attributes[e.field],(n>=t.minValue&&n<t.maxValue||r===e.classBreakInfos.length-1&&n>=t.minValue)&&s.push([a.attributes[p],i.r,i.g,i.b])}))}));const t=o?ue(s,o):s,r=new $;return r.functionName="Colormap",r.functionArguments={},r.functionArguments.Colormap=t,r.variableName="Raster",r}e.classBreakInfos.forEach(((e,t)=>{const o=e.symbol&&e.symbol.color;o.a?(0===t?r.push(e.minValue,e.maxValue+a):r.push(e.minValue+a,e.maxValue+a),i.push(t),s.push([t,o.r,o.g,o.b])):n.push(e.minValue,e.maxValue)}));const c=o?ue(s,o):s,d=new $;d.functionName="Remap",d.functionArguments={InputRanges:r,OutputValues:i,NoDataRanges:n},d.variableName="Raster";const m=new $;return m.functionName="Colormap",m.functionArguments={Colormap:c,Raster:d},m}(e,t);case"unique-value":return function(e,t){const r=[],{pixelType:i,rasterAttributeTable:n}=t,s=n&&n.features,a=pe(n);let o=!1;if(e.uniqueValueInfos&&e.uniqueValueInfos.forEach((t=>{const i=t.symbol.color;i.a&&(e.field!==a&&s?s&&s.forEach((n=>{String(n.attributes[e.field])===String(t.value)&&r.push([n.attributes[a],i.r,i.g,i.b])})):isNaN(+t.value)?o=!0:r.push([+t.value,i.r,i.g,i.b]))})),o)return null;const l=i&&r.length>0?ue(r,i):r,u=new $;return u.functionName="Colormap",u.functionArguments={},u.functionArguments.Colormap=l,u.variableName="Raster",u}(e,t);case"raster-colormap":return function(e,t){const r=e.extractColormap();if(!r||0===r.length)return;const{pixelType:i}=t,n=i?ue(r,i):r,s=new $;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=n,s}(e,t);case"vector-field":return function(e,t){const r=new $;r.functionName="VectorFieldRenderer";const{dataType:i,bandProperties:n}=t,s="vector-uv"===i;let a,o;n&&2===n.length&&(a=n.map((e=>e.BandName.toLowerCase())).indexOf("magnitude"),o=n.map((e=>e.BandName.toLowerCase())).indexOf("direction")),-1!==a&&null!==a||(a=0,o=1);const l="arithmetic"===e.rotationType?1:2,u="flow-from"===e.flowRepresentation?0:1,p=e.visualVariables?e.visualVariables.filter((e=>"Magnitude"===e.field))[0]:new K.Z,c={magnitudeBandID:a,directionBandID:o,isUVComponents:s,referenceSystem:l,massFlowAngleRepresentation:u,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:ie[e.style.toLowerCase().replace("-","_")],minimumMagnitude:p.minDataValue,maximumMagnitude:p.maxDataValue,minimumSymbolSize:p.minSize,maximumSymbolSize:p.maxSize};return r.functionArguments=c,r}(e,t);case"raster-shaded-relief":return function(e,t){if("elevation"!==t.dataType)return new $;const r=new $;r.functionName="Hillshade";const i="traditional"===e.hillshadeType?0:1,n="none"===e.scalingType?1:3,s={HillshadeType:i,SlopeType:n,ZFactor:e.zFactor};return 0===i&&(s.Azimuth=e.azimuth,s.Altitude=e.altitude),3===n&&(s.PSPower=e.pixelSizePower,s.PSZFactor=e.pixelSizeFactor),r.functionArguments=s,r.variableName="Raster",e.colorRamp&&(r.functionName="ShadedRelief",s.Colormap=(0,ee.Jw)(e.colorRamp,256)),r}(e,t)}}(n,{rasterAttributeTable:r.attributeTable,pixelType:r.pixelType,dataType:r.dataType,bandProperties:null==(e=r.keyProperties)?void 0:e.BandProperties,convertColorRampToColormap:t.version<10.6}),i):i}_addResampleRasterFunction(e){var t;let r=null;if("vector-field"===(null==(t=this.layer.renderer)?void 0:t.type)){const e={},t=this.layer.renderingRule;if(!t||"Resample"!==t.functionName){const t="esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10;e.rasterFunction="Resample",e.rasterFunctionArguments={ResamplingType:t,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}}r=$.fromJSON(e)}return ae(r,e)}};(0,n._)([(0,l.Cb)()],ve.prototype,"layer",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],ve.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,p.c)("adjustAspectRatio")],ve.prototype,"writeAdjustAspectRatio",null),(0,n._)([(0,l.Cb)({json:{write:!0}}),(0,C.B)("layer.bandIds")],ve.prototype,"bandIds",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],ve.prototype,"compression",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}}),(0,C.B)("layer.compressionQuality")],ve.prototype,"compressionQuality",void 0),(0,n._)([(0,p.c)("compressionQuality")],ve.prototype,"writeCompressionQuality",null),(0,n._)([(0,l.Cb)({json:{write:!0}}),(0,C.B)("layer.compressionTolerance")],ve.prototype,"compressionTolerance",void 0),(0,n._)([(0,p.c)("compressionTolerance")],ve.prototype,"writeCompressionTolerance",null),(0,n._)([(0,l.Cb)({json:{write:!0}}),(0,C.B)("layer.format")],ve.prototype,"format",void 0),(0,n._)([(0,l.Cb)({type:String,json:{read:{reader:ge.read},write:{writer:ge.write}}}),(0,C.B)("layer.interpolation")],ve.prototype,"interpolation",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}}),(0,C.B)("layer.noData")],ve.prototype,"noData",void 0),(0,n._)([(0,l.Cb)({type:String,json:{read:{reader:be.read},write:{writer:be.write}}}),(0,C.B)("layer.noDataInterpretation")],ve.prototype,"noDataInterpretation",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],ve.prototype,"pixelType",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],ve.prototype,"lercVersion",void 0),(0,n._)([(0,p.c)("lercVersion")],ve.prototype,"writeLercVersion",null),(0,n._)([(0,l.Cb)({type:Number,dependsOn:["layer.adjustAspectRatio","layer.bandIds","layer.format","layer.compressionQuality","layer.compressionTolerance","layer.definitionExpression","layer.interpolation","layer.noData","layer.noDataInterpretation","layer.mosaicRule","layer.renderingRule","layer.pixelFilter","layer.renderer","lercVersion","pixelType"]})],ve.prototype,"version",null),(0,n._)([(0,l.Cb)({dependsOn:["layer.mosaicRule","layer.definitionExpression"],json:{write:!0}})],ve.prototype,"mosaicRule",null),(0,n._)([(0,l.Cb)({dependsOn:["layer.renderingRule","layer.renderer","layer.rasterInfo","layer.format"],json:{write:!0}})],ve.prototype,"renderingRule",null),ve=(0,n._)([(0,u.j)("esri.layers.mixins.ExportImageServiceParameters")],ve);var Re=r(37172),we=r(68509),_e=r(8985),xe=r(92663),Se=r(9628),Ie=r(91535),Ce=r(66849);let Ne=class extends B.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,n._)([(0,l.Cb)({json:{write:!0}})],Ne.prototype,"catalogItemVisibilities",void 0),(0,n._)([(0,l.Cb)({type:L.default,json:{write:!0}})],Ne.prototype,"catalogItems",void 0),(0,n._)([(0,l.Cb)({type:j.Z,json:{write:!0}})],Ne.prototype,"location",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],Ne.prototype,"name",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],Ne.prototype,"objectId",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],Ne.prototype,"processedValues",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],Ne.prototype,"properties",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],Ne.prototype,"value",void 0),Ne=(0,n._)([(0,u.j)("esri.tasks.support.ImageIdentifyResult")],Ne);const Oe=Ne;async function Te(e,t,r){const i=(0,Ce.en)(e),n=t.geometry?[t.geometry]:[],a=await(0,Ie.aX)(n),o=t.toJSON();!function(e){const t=null==e?void 0:e.time;if(t&&(null!=t.start||null!=t.end)){const r=[];null!=t.start&&r.push(t.start),null!=t.end&&-1===r.indexOf(t.end)&&r.push(t.end),e.time=r.join(",")}}(o);const l=a&&a[0];(0,s.pC)(l)&&(o.geometry=l.toJSON());const u=(0,Ce.cv)({...i.query,f:"json",...o});return(0,Ce.lA)(u,r)}var Fe=r(95986);let je=class extends Fe.Z{execute(e,t){return async function(e,t,r){const i=(0,Ce.en)(e),n=t.geometry?[t.geometry]:[];return(0,Ie.aX)(n).then((e=>{const n=t.toJSON(),a=e&&e[0];(0,s.pC)(a)&&(n.geometry=JSON.stringify(a.toJSON()));const o=(0,Ce.cv)({...i.query,f:"json",...n}),l=(0,Ce.lA)(o,r);return(0,M.default)(i.path+"/identify",l)})).then((e=>Oe.fromJSON(e.data)))}(this.url,e,t)}};je=(0,n._)([(0,u.j)("esri.tasks.ImageIdentifyTask")],je);const Pe=je;var De,Me=r(56885),Ae=r(87864);let Ve=De=class extends B.wq{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0}writeGeometry(e,t,r){null!=e&&(t.geometryType=(0,Me.Ji)(e),t[r]=JSON.stringify(e.toJSON()))}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=fe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}writeMosaicRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=$.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}writeRenderingRule(e,t,r){null!=e&&(t[r]=JSON.stringify(e.toJSON()))}writeRenderingRules(e,t,r){null!=e&&(t[r]=JSON.stringify(e.map((e=>e.toJSON()))))}writePixelSize(e,t,r){null!=e&&(t[r]=JSON.stringify(e))}writeTimeExtent(e,t,r){if(null!=e){const i=e.start?e.start.getTime():null,n=e.end?e.end.getTime():null;t[r]=null!=i?null!=n?`${i},${n}`:`${i}`:null}}clone(){return new De((0,I.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,n._)([(0,l.Cb)({json:{write:!0}})],Ve.prototype,"geometry",void 0),(0,n._)([(0,p.c)("geometry")],Ve.prototype,"writeGeometry",null),(0,n._)([(0,l.Cb)({type:fe,json:{write:!0}})],Ve.prototype,"mosaicRule",null),(0,n._)([(0,p.c)("mosaicRule")],Ve.prototype,"writeMosaicRule",null),(0,n._)([(0,l.Cb)({type:$,json:{write:!0}})],Ve.prototype,"renderingRule",null),(0,n._)([(0,p.c)("renderingRule")],Ve.prototype,"writeRenderingRule",null),(0,n._)([(0,l.Cb)({type:[$],json:{write:!0}})],Ve.prototype,"renderingRules",void 0),(0,n._)([(0,p.c)("renderingRules")],Ve.prototype,"writeRenderingRules",null),(0,n._)([(0,l.Cb)({type:j.Z,json:{write:!0}})],Ve.prototype,"pixelSize",void 0),(0,n._)([(0,p.c)("pixelSize")],Ve.prototype,"writePixelSize",null),(0,n._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],Ve.prototype,"returnGeometry",void 0),(0,n._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],Ve.prototype,"returnCatalogItems",void 0),(0,n._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],Ve.prototype,"returnPixelValues",void 0),(0,n._)([(0,l.Cb)({type:Number,json:{write:!0}})],Ve.prototype,"maxItemCount",void 0),(0,n._)([(0,l.Cb)({type:Ae.Z,json:{write:{target:"time"}}})],Ve.prototype,"timeExtent",void 0),(0,n._)([(0,p.c)("timeExtent")],Ve.prototype,"writeTimeExtent",null),(0,n._)([(0,l.Cb)({json:{write:!0}})],Ve.prototype,"raster",void 0),(0,n._)([(0,l.Cb)({json:{write:!0}})],Ve.prototype,"viewId",void 0),Ve=De=(0,n._)([(0,u.j)("esri.tasks.support.ImageIdentifyParameters")],Ve);const Je=Ve,ze=a.Z.getLogger("esri.layers.mixins.ArcGISImageService"),Ee=(0,N.wY)()({RSP_NearestNeighbor:"nearest",RSP_BilinearInterpolation:"bilinear",RSP_CubicConvolution:"cubic",RSP_Majority:"majority"}),Le=(0,N.wY)()({esriNoDataMatchAny:"any",esriNoDataMatchAll:"all"}),ke=(0,N.wY)()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),qe=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Ue=(0,l.Eg)(o.q9,{min:0,max:255}),Ze=e=>{let t=class extends e{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._symbolizer=null,this._defaultServiceMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.renderer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=null}initialize(){this._set("exportImageServiceParameters",new ve({layer:this}))}readDefaultServiceMosaicRule(e,t){return fe.fromJSON(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos.length<1||this.rasterFunctionInfos.forEach((t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)})),e}get queryTask(){return new q.Z({url:this.url})}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every((e=>"number"==typeof e)))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,r){null!=e&&"lerc"!==this.format&&(t[r]=e)}writeCompressionTolerance(e,t,r){"lerc"===this.format&&null!=e&&(t[r]=e)}get fieldsIndex(){return this.fields?new E.Z(this.fields):null}set format(e){e&&qe.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=fe.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){return fe.fromJSON(e||t.mosaicRule||t)}writeMosaicRule(e,t,r){let i=this.mosaicRule;const n=this.definitionExpression;i?n&&n!==i.where&&(i=i.clone(),i.where=n):n&&(i=new fe({where:n})),this._isValidCustomizedMosaicRule(i)&&(t[r]=i.toJSON())}writeNoData(e,t,r){null!=e&&"number"==typeof e&&(t[r]=Ue(e))}readObjectIdField(e,t){if(!e){const r=t.fields.filter((e=>"esriFieldTypeOID"===e.type||"oid"===e.type));e=r&&r[0]&&r[0].name}return e}get parsedUrl(){return this.url?(0,c.mN)(this.url):null}readRenderer(e,t,r){const i=t&&t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.renderer,n=(0,J.ij)(i,r)||void 0;if(null!=n)return se(n)||ze.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),n}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new z.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),r=new z.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new z.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let n=this.fields?(0,I.d9)(this.fields):[];n.push(r),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&n.push(t),this.version>=10.4&&this.rasterFunctionInfos&&this.rasterFunctionInfos.some((e=>"none"===e.name.toLowerCase()))&&n.push(i),this.rasterFunctionInfos&&this.rasterFunctionInfos.filter((e=>"none"!==e.name.toLowerCase())).forEach((e=>{n.push(new z.Z({name:"Raster.ServicePixelValue."+e.name,alias:e.name,domain:null,editable:!1,length:50,type:"string"}))})),null==this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType||(n.push(new z.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),n.push(new z.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const s=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(s&&s.length>0){const t=s.filter((e=>"esriFieldTypeOID"!==e.type&&"value"!==e.name.toLowerCase())).map((t=>{const r=(0,I.d9)(t);return r.name=e+t.name,r}));n=n.concat(t)}return n}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=$.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("renderingRule",t)}readRenderingRule(e,t){const r=t.rasterFunctionInfos;return t.renderingRule||r&&r.length&&"None"!==r[0].name?$.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,r){this._isRFTJson(e)||(t[r]=e.toJSON())}readSpatialReference(e,t){const r=e||t.extent.spatialReference;return r?F.Z.fromJSON(r):null}readPixelType(e){return ke.fromJSON(e)||e}writePixelType(e,t,r){((0,s.Wi)(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[r]=ke.toJSON(e))}readVersion(e,t){let r=t.currentVersion;return r||(r=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),r}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let r=e;if(!this._isPicture()&&this.renderer&&this._symbolizer&&!this.pixelFilter){const i=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),n=this._rasterJobHandler.instance,{bandIds:s}=this;if(n){i&&(this._symbolizer.bind(),await n.updateSymbolizer(this._symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const a=await n.symbolize({bandIds:s,...e},t);r={extent:e.extent,pixelBlock:a}}else r={extent:e.extent,pixelBlock:this._symbolizer.symbolize({bandIds:s,...e})}}return r}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeHistograms)throw new T.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:i,mosaicRule:n,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),n&&null==e.mosaicRule&&(e.mosaicRule=n),i&&null==e.raster&&(e.raster=i),async function(e,t,r){const i=await Te(e,t,r),n=(0,Ce.en)(e),{data:s}=await(0,M.default)(`${n.path}/computeHistograms`,i);return{histograms:s.histograms}}(this.url,e,{signal:r})}async computeStatisticsHistograms(e,t){const r=null==t?void 0:t.signal;if(await this._fetchCapabilities(r),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new T.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=e.clone();const{raster:i,mosaicRule:n,renderingRule:s}=this;return s&&null==e.renderingRule&&(e.renderingRule=s),n&&null==e.mosaicRule&&(e.mosaicRule=n),i&&null==e.raster&&(e.raster=i),async function(e,t,r){const i=await Te(e,t,r),n=(0,Ce.en)(e),{data:s}=await(0,M.default)(`${n.path}/computeStatisticsHistograms`,i),{statistics:a}=s;return null!=a&&a.length&&a.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:a,histograms:s.histograms}}(this.url,e,{signal:r})}fetchImage(e,t,r,i={}){if(null==e||null==t||null==r)return(0,d.reject)(new T.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const n=this.renderer||this._symbolizer?this.generateRasterInfo(this.renderingRule,{signal:i.signal}):null;return(0,d.when)(n).then((n=>{n&&(this.rasterInfo=n);const s={imageServiceParameters:this.getExportImageServiceParameters(e,t,r,i.timeExtent),imageProps:{extent:e,width:t,height:r,format:this.format},requestAsImageElement:i.requestAsImageElement&&!this.pixelFilter||!1,signal:i.signal};return this._requestArrayBuffer(s)}))}fetchKeyProperties(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return(0,M.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>e.data))}fetchRasterAttributeTable(e){const t=e&&e.renderingRule&&e.renderingRule.toJSON();return this.version<10.1?(0,d.reject)(new T.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,M.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3&&t?JSON.stringify(t):null})}).then((e=>L.default.fromJSON(e.data)))}async getCatalogItemRasterInfo(e,t){const r=(0,M.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t}).then((e=>e.data)),i=(0,M.default)(this.parsedUrl.path+"/"+e+"/info/keyProperties",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>{})),n=await(0,d.all)([r,i]);if(!n[0])return;const s=P.Z.fromJSON(n[0].extent),a=n[0].statistics?n[0].statistics.map((e=>({min:e[0],max:e[1],avg:e[2],stddev:e[3]}))):null;return new Re.Z({bandCount:n[0].bandCount,extent:s,spatialReference:s.sr,pixelSize:new j.Z({x:n[0].pixelSizeX,y:n[0].pixelSizeY,spatialReference:s.sr}),pixelType:n[0].pixelType.toLowerCase(),statistics:a,histograms:n[0].histograms,keyProperties:n[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:r}=await(0,M.default)(this.parsedUrl.path+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),i=r&&r.ics;if(!i)return;let n=null;try{n=(await(0,M.default)(this.parsedUrl.path+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!n||!n.spatialReference)return{ics:i,icsToPixelTransform:null,icsExtent:null,northDirection:null};const s=this.version>=10.7?(0,M.default)(this.parsedUrl.path+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then((e=>e.data)).catch((()=>({}))):{},a=n.spatialReference,o={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[n]}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},l=(0,M.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(o),...t}).then((e=>e.data)).catch((()=>({}))),u=(n.xmin+n.xmax)/2,p=(n.ymax-n.ymin)/6,c=n.ymin+p,m=[];for(let e=0;e<5;e++)m.push({x:u,y:c+p*e});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:m}),inSR:a.wkid||JSON.stringify(a),outSR:"0:"+e},y=(0,M.default)(this.parsedUrl.path+"/project",{query:this._getQueryParams(h),...t}).then((e=>e.data)).catch((()=>({}))),f=await(0,d.all)([s,l,y]);let g=f[0].ipxf;if(null==g){var b,v,R;const e=null==(b=i.geodataXform)?void 0:b.xf_0;"topup"===(null==e||null==(v=e.name)?void 0:v.toLowerCase())&&6===(null==e||null==(R=e.coefficients)?void 0:R.length)&&(g={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:e.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const w=P.Z.fromJSON(f[1]&&f[1].geometries&&f[1].geometries[0]);w&&(w.spatialReference=new F.Z({wkid:0,imageCoordinateSystem:i}));const _=f[2].geometries?f[2].geometries.filter((e=>null!=e&&null!=e.x&&null!=e.y&&"NaN"!==e.x&&"NaN"!==e.y)):[],x=_.length;if(x<3)return{ics:i,icsToPixelTransform:g,icsExtent:w,northDirection:null};let S=0,I=0,C=0,N=0;for(let e=0;e<x;e++)S+=_[e].x,I+=_[e].y,C+=_[e].x*_[e].x,N+=_[e].x*_[e].y;const O=(x*N-S*I)/(x*C-S*S);let T=0;const j=_[4].x>_[0].x,D=_[4].y>_[0].y;return O===1/0?T=D?90:270:0===O?T=j?0:180:O>0?T=j?180*Math.atan(O)/Math.PI:180*Math.atan(O)/Math.PI+180:O<0&&(T=D?180+180*Math.atan(O)/Math.PI:360+180*Math.atan(O)/Math.PI),{ics:i,icsToPixelTransform:g,icsExtent:w,northDirection:T}}async generateRasterInfo(e,t){if((!e||"none"===e.functionName.toLowerCase())&&(0,s.pC)(this.serviceRasterInfo))return this.serviceRasterInfo;const r=function(e){if(!e)return null;const t=JSON.stringify(e).match(/"rasterFunction":"(.*?")/gi),r=null==t?void 0:t.map((e=>e.replace('"rasterFunction":"',"").replace('"',"")));return r?r.join("/"):null}(e);if(this._functionRasterInfos[r])return this._functionRasterInfos[r];const i=this._generateRasterInfo(e,t);this._functionRasterInfos[r]=i;try{return await i}catch{return this._functionRasterInfos[r]=null,null}}getExportImageServiceParameters(e,t,r,i){const n=(e=e.clone().shiftCentralMeridian()).spatialReference;let a;if(n.imageCoordinateSystem){const{id:e,referenceServiceName:t}=n.imageCoordinateSystem;a=null!=e?t?this.parsedUrl.path.toLowerCase().indexOf("/"+t.toLowerCase()+"/")>-1?"0:"+e:JSON.stringify({icsid:e,icsns:t}):"0:"+e:JSON.stringify({ics:n.imageCoordinateSystem})}else a=n.wkid||JSON.stringify(n.toJSON());(0,s.pC)(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const o=this.exportImageServiceParameters.toJSON(),{bandIds:l,noData:u,mosaicRule:p,renderingRule:c}=o;l instanceof Array&&l.length>0&&(o.bandIds=l.join(",")),u instanceof Array&&u.length>0&&(o.noData=u.join(","));const d=this.timeInfo;p&&p.multidimensionalDefinition&&i&&d&&d.startField&&(p.multidimensionalDefinition=p.multidimensionalDefinition.filter((e=>e.dimensionName!==d.startField))),o.mosaicRule=p&&JSON.stringify(p),o.renderingRule=c&&JSON.stringify(c);const m={};if(i){const{start:e,end:t}=i.toJSON();e&&t&&e===t?m.time=""+e:null==e&&null==t||(m.time=`${null==e?"null":e},${null==t?"null":t}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:a,imageSR:a,size:t+","+r,...o,...m}}async identify(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new T.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");e=e.clone();const{raster:r,mosaicRule:i,renderingRule:n}=this;return n&&null==e.renderingRule&&(e.renderingRule=n),i&&null==e.mosaicRule&&(e.mosaicRule=i),r&&null==e.raster&&(e.raster=r),new Pe({url:this.url}).execute(e,t)}async queryRasters(e,t){if(await this._fetchCapabilities(null==t?void 0:t.signal),!this.capabilities.operations.supportsQuery)throw new T.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return this.queryTask.execute(e,t)}queryVisibleRasters(e,t){if(!e)return(0,d.reject)(new T.Z("imagery-layer: query-visible-rasters","missing query parameter"));const{pixelSize:r,returnDomainValues:i,returnTopmostRaster:n,showNoDataRecords:a}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let o=!1,l=null,u=null;const p="raster.servicepixelvalue",c=this.rasterFunctionNamesIndex;if((0,s.pC)(e.outFields)&&(o=e.outFields.some((e=>-1===e.toLowerCase().indexOf(p))),this.version>=10.4)){const t=e.outFields.filter((e=>e.toLowerCase().indexOf(p)>-1&&e.length>p.length)).map((e=>{const t=e.slice(p.length+1);return[this._updateRenderingRulesFunctionName(t,c),t]}));l=t.map((e=>new $({functionName:e[0]}))),u=t.map((e=>e[1])),0===l.length?this.renderingRule?(l.push(this.renderingRule),u.push(this.renderingRule.functionName)):l=null:this.renderingRule&&!l.some((e=>e.functionName===this.renderingRule.functionName))&&(l.push(this.renderingRule),u.push(this.renderingRule.functionName))}const m=(0,s.Wi)(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),h=this._getQueryParams({geometry:e.geometry,timeExtent:e.timeExtent,mosaicRule:this.exportImageServiceParameters.mosaicRule,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:l,pixelSize:r,returnCatalogItems:o,returnGeometry:m,maxItemCount:n?1:null});delete h.f;const y=new Je(h),f=new Pe({url:this.url}),g=this.generateRasterInfo(this.renderingRule);return(0,d.create)((t=>{g.then((()=>{f.execute(y).then((r=>{const n=e.outFields;if(o&&!m&&r.catalogItems&&r.catalogItems.features&&r.catalogItems.features.length>0){const s=this.objectIdField||"ObjectId",o=r.catalogItems.features,l=o.map((e=>e.attributes&&e.attributes[s])),p=new k.Z({objectIds:l,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[s]});return this.queryRasters(p).then((l=>{l&&l.features&&l.features.length>0&&l.features.forEach((t=>{o.forEach((r=>{r.attributes[s]===t.attributes[s]&&(r.geometry=new D.Z(t.geometry),r.geometry.spatialReference=e.outSpatialReference)}))})),t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:n}))})).catch((()=>{throw new T.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters geometry")}))}t(this._processVisibleRastersResponse(r,{returnDomainValues:i,templateRRFunctionNames:u,showNoDataRecords:a,templateFields:n}))})).catch((()=>{throw new T.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}))}))}))}async fetchVariableStatisticsHistograms(e,t){const r=(0,M.default)(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.statistics})),i=(0,M.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),n=await(0,d.all)([r,i]);return n[0]&&n[0].forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation})),{statistics:n[0]||null,histograms:n[1]||null}}async _fetchService(e){await this._fetchServiceInfo(e),(0,s.pC)(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,r=(0,s.pC)(this.serviceRasterInfo)?(0,d.resolve)(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then((e=>(this._set("serviceRasterInfo",e),e))),i=this.renderingRule&&"none"!==this.renderingRule.functionName.toLowerCase()?this.generateRasterInfo(this.renderingRule,{signal:e}):null;return(0,d.all)([r,i]).then((e=>{e[1]?this._set("rasterInfo",e[1]):this._set("rasterInfo",e[0]),this.renderer&&(0,xe.U0)(this.rasterInfo).indexOf(this.renderer.type)<0&&(this.renderer=null,ze.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._configDefaultRenderer(),this.watch("renderer",(()=>this._configDefaultRenderer())),this.watch("renderingRule",(e=>{(this.renderer||this._symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(e).then((e=>{e&&(this.rasterInfo=e)}))}));const t=(0,s.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;t&&this._updateMultidimensionalDefinition(t)}))}async _initJobHandler(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new we.Z;this._rasterJobHandler.connectionPromise=e.initialize().then((()=>{this._rasterJobHandler.instance=e}),(()=>null)),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let r=this.sourceJSON;if(!r){const{data:t,ssl:i}=await(0,M.default)(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});r=t,this.sourceJSON=r,i&&(this.url=this.url.replace(/^http:/i,"https:"))}if((null==(t=r.capabilities)?void 0:t.toLowerCase().split(",").map((e=>e.trim())).indexOf("tilesonly"))>-1)throw new T.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(r,{origin:"service",url:this.parsedUrl})}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configDefaultRenderer(){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const e=(0,xe.YD)(this.rasterInfo);!e||3===this.rasterInfo.bandCount&&0===e[0]&&1===e[1]&&2===e[2]||(this.bandIds=e)}var e,t;this.renderer||(this.renderer=(0,xe.Ob)(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:null==(e=this.mosaicRule)||null==(t=e.multidimensionalDefinition)?void 0:t[0].variableName})),this._symbolizer?(this._symbolizer.rendererJSON=this.renderer.toJSON(),this._symbolizer.rasterInfo=this.rasterInfo):this._symbolizer=new Se.Z({rendererJSON:this.renderer.toJSON(),rasterInfo:this.rasterInfo}),this._symbolizer.bind()||(this._symbolizer=null)}}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock&&e.pixelBlock.clone()}}_getQueryParams(e){const{raster:t,viewId:r}=this;return{raster:t,viewId:r,f:"json",...e}}_decodePixelBlock(e,t,r){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,_e.J)(e,t,r)}async _fetchMultidimensionalInfo(e){var t;const r=await(0,M.default)(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then((e=>{var t;return null==(t=e.data)?void 0:t.multidimensionalInfo}));return null!=(t=r.variables)&&t.length&&r.variables.forEach((e=>{var t;null!=(t=e.statistics)&&t.length&&e.statistics.forEach((e=>{e.avg=e.mean,e.stddev=e.standardDeviation}))})),r}_fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return(0,d.reject)(new T.Z("imagery-layer:fetch-metadata","valid serviceInfo is required"));const r=e.renderingRule?JSON.stringify(e.renderingRule.toJSON()):null,i=e.signal,n=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&(0,M.default)(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>L.default.fromJSON(e.data))).catch((()=>null)),s=!!(t.hasColormap&&this.version>=10.1)&&(0,M.default)(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.colormap})),a=!!(t.hasHistograms&&this.version>=10.1)&&(0,M.default)(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?r:null}),signal:i}).then((e=>{var t;return null==(t=e.data)?void 0:t.histograms})),o=this.version>=10.3&&(0,M.default)(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:r}),signal:i}).then((e=>e.data)).catch((()=>{})),l=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo();return(0,d.all)([n,s,a,o,l]).then((e=>{let r=null;if(t.minValues&&t.minValues.length===t.bandCount){r=[];for(let e=0;e<t.minValues.length;e++)r.push({min:t.minValues[e],max:t.maxValues[e],avg:t.meanValues[e],stddev:t.stdvValues[e]})}const i=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),n=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),s=F.Z.fromJSON(t.spatialReference||t.extent.spatialReference);return new Re.Z({width:i,height:n,bandCount:t.bandCount,extent:P.Z.fromJSON(t.extent),spatialReference:s,pixelSize:new j.Z({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:s}),pixelType:t.pixelType.toLowerCase(),statistics:r,attributeTable:e[0]||null,colormap:e[1]||null,histograms:e[2]||null,keyProperties:e[3]||{},multidimensionalInfo:e[4]||null})}))}_requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:r,signal:i}=e;if(r&&!this.pixelFilter&&t.format&&t.format.indexOf("png")>-1)return(0,M.default)(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i}).then((e=>({imageElement:e.data,params:t})));const n=this._initJobHandler(),s=(0,M.default)(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:i});return(0,d.all)([s,n]).then((e=>{const r=e[0].data,n=t.format||"jpgpng";let s=n;if("bsq"!==s&&"bip"!==s&&(s=(0,_e.y)(r)),!s)throw new T.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(r)));const a="gif"===n||"bmp"===n||n.indexOf("png")>-1&&("png"===s||"jpg"===s),o={signal:i};return a?(0,_e.J)(r,{useCanvas:!0,...t},o).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t}))):this._decodePixelBlock(r,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:n},o).then((e=>({pixelData:{pixelBlock:e,extent:t.extent},params:t})))}))}async _generateRasterInfo(e,t){const{data:r}=await(0,M.default)(this.parsedUrl.path,{query:this._getQueryParams({renderingRule:e}),...t});return await this._fetchAuxiliaryRasterInfo({serviceInfo:r,renderingRule:e,...t})}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this._defaultServiceMosaicRule&&this._defaultServiceMosaicRule.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,r=[];for(const e in t)if(t.hasOwnProperty(e)){const i=t[e],n=i.extent;let s=!0,a=[n[0]];i.hasRanges&&!0===i.hasRanges?(s=!1,a=[i.values[0]]):"stdz"===i.name.toLowerCase()&&Math.abs(n[1])<=Math.abs(n[0])&&(a=[n[1]]),r.push(new U.Z({variableName:"",dimensionName:t[e].name,isSlice:s,values:a}))}if(r.length>0){this.mosaicRule=this.mosaicRule||new fe;const e=this.mosaicRule.multidimensionalDefinition;(!e||e&&e.length<=0)&&(this.mosaicRule.multidimensionalDefinition=r)}}_formatAttributeValue(e,t){if("string"==typeof e){const r=this.popupTemplate&&this.popupTemplate.fieldInfos,i=this._getFieldInfo(r,t),n=i&&i.format;if(n){let t,r;return e.trim().indexOf(",")>-1?(t=",",r=t+" ",this._formatDelimitedString(e,t,r,n)):e.trim().indexOf(" ")>-1?(t=r=" ",this._formatDelimitedString(e,t,r,n)):this._formatNumberFromString(e,n)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const r=t.toLowerCase();let i;return e.some((e=>!(!e.fieldName||e.fieldName.toLowerCase()!==r&&e.fieldName.toLowerCase()!==r.replace(/ /g,"_")||(i=e,0)))),i}_formatDelimitedString(e,t,r,i){return e&&t&&r&&i?e.trim().split(t).map((e=>this._formatNumberFromString(e,i))).join(r):e}_formatNumberFromString(e,t){if(!e||!t)return e;const r=Number(e);return isNaN(r)?e:t.format(r)}_processVisibleRastersResponse(e,t){t=t||{};const r=e.value,{templateRRFunctionNames:i,showNoDataRecords:n,returnDomainValues:a,templateFields:o}=t,l=e.processedValues;let u=e.catalogItems&&e.catalogItems.features,p=e.properties&&e.properties.Values&&e.properties.Values.map((e=>e.replace(/ /gi,", ")))||[];const c=this.objectIdField||"ObjectId",d="string"==typeof r&&r.toLowerCase().indexOf("nodata")>-1,m=[];if(r&&!u&&!d){const e={};e[c]=0,p=[r],u=[new A.default(this.fullExtent,null,e)]}if(!u)return[];let h,y,f;this._updateResponseFieldNames(u,o);for(let e=0;e<u.length;e++){if(h=u[e],null!=r&&!d){if(y=p[e],f=this.renderingRule&&l&&l.length>0&&i&&i.length>0&&i.indexOf(this.renderingRule.functionName)>-1?l[i.indexOf(this.renderingRule.functionName)]:r,"nodata"===y.toLowerCase()&&!n)continue;const t="Raster.ItemPixelValue",a="Raster.ServicePixelValue";h.attributes[t]=this._formatAttributeValue(y,t),h.attributes[a]=this._formatAttributeValue(f,a),this._updateFeatureWithMagDirValues(h,y);const o=this.fields&&this.fields.length>0;let u=this.renderingRule&&(0,s.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?o?y:r:f;this.renderingRule||(u=o?y:r),this._updateFeatureWithRasterAttributeTableValues(h,u)}if(h.sourceLayer=this,a&&this._updateFeatureWithDomainValues(h),i&&l&&i.length===l.length)for(let e=0;e<i.length;e++){const t="Raster.ServicePixelValue."+i[e];h.attributes[t]=this._formatAttributeValue(l[e],t)}m.push(u[e])}return m}_updateFeatureWithRasterAttributeTableValues(e,t){const r=this.rasterInfo&&this.rasterInfo.attributeTable||(0,s.pC)(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,i=r&&r.features;if(!i)return;const n=r.fields,a=n.map((e=>e.name)).filter((e=>"value"===e.toLowerCase())),o=a&&a[0];if(!o)return;const l=i.filter((e=>e.attributes[o]===(null!=t?parseInt(t,10):null)));l&&l[0]&&n.forEach((t=>{const r=this.rasterAttributeTableFieldPrefix+t.name;e.attributes[r]=this._formatAttributeValue(l[0].attributes[t.name],r)}))}_updateFeatureWithMagDirValues(e,t){if(!this.pixelFilter||"esriImageServiceDataTypeVector-UV"!==this.serviceDataType&&"esriImageServiceDataTypeVector-MagDir"!==this.serviceDataType)return;const r=t.replace(" ",",").split(",").map((e=>parseFloat(e))),i=r.map((e=>[e])),n=r.map((e=>({minValue:e,maxValue:e,noDataValue:null}))),s=new V.Z({height:1,width:1,pixelType:"f32",pixels:i,statistics:n});this.pixelFilter({pixelBlock:s,extent:new P.Z(0,0,0,0,this.spatialReference)}),e.attributes["Raster.Magnitude"]=s.pixels[0][0],e.attributes["Raster.Direction"]=s.pixels[1][0]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter((e=>e.domain&&"coded-value"===e.domain.type));null!=t&&t.forEach((t=>{const r=e.attributes[t.name];if(null!=r){const i=t.domain.codedValues.filter((e=>e.code===r))[0];i&&(e.attributes[t.name]=i.name)}}))}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const r=this.fieldsIndex;r&&e.forEach((e=>{if(e&&e.attributes)for(const i of t)if(r.has(i)){const t=r.get(i).name;t!==i&&(e.attributes[i]=e.attributes[t],delete e.attributes[t])}}))}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const r=e.toLowerCase().replace(/ /gi,"_");return t.has(r)?t.get(r):e}_isRFTJson(e){return e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map((e=>e.trim())):["image","catalog"],{currentVersion:r,advancedQueryCapabilities:i,maxRecordCount:n}=e,s=t.indexOf("image")>-1,a="esriImageServiceDataTypeElevation"===e.serviceDataType,o=!!(e.spatialReference||e.extent&&e.extent.spatialReference);return{operations:{supportsComputeHistograms:s,supportsExportImage:s,supportsIdentify:s,supportsMeasure:t.indexOf("mensuration")>-1&&o,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:r>=10.2&&s,supportsProject:r>=10.3&&s,supportsComputeStatisticsHistograms:r>=10.4&&s,supportsQueryBoundary:r>=10.6&&s,supportsCalculateVolume:r>=10.7&&a,supportsComputePixelLocation:r>=10.7&&t.indexOf("catalog")>-1},query:{supportsStatistics:!(!i||!i.supportsStatistics),supportsOrderBy:!(!i||!i.supportsOrderBy),supportsDistinct:!(!i||!i.supportsDistinct),supportsPagination:!(!i||!i.supportsPagination),supportsStandardizedQueriesOnly:!(!i||!i.useStandardizedQueries),maxRecordCount:n}}}};return(0,n._)([(0,l.Cb)()],t.prototype,"_functionRasterInfos",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"_rasterJobHandler",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"_symbolizer",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"_defaultServiceMosaicRule",void 0),(0,n._)([(0,O.r)("_defaultServiceMosaicRule",["defaultMosaicMethod"])],t.prototype,"readDefaultServiceMosaicRule",null),(0,n._)([(0,l.Cb)()],t.prototype,"_cachedRendererJson",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"rasterAttributeTableFieldPrefix",void 0),(0,n._)([(0,l.Cb)({readOnly:!0,dependsOn:["rasterFunctionInfos"]})],t.prototype,"rasterFunctionNamesIndex",null),(0,n._)([(0,l.Cb)({readOnly:!0,dependsOn:["url"]})],t.prototype,"queryTask",null),(0,n._)([(0,l.Cb)()],t.prototype,"adjustAspectRatio",void 0),(0,n._)([(0,l.Cb)({readOnly:!0}),(0,C.B)("serviceRasterInfo.bandCount")],t.prototype,"bandCount",void 0),(0,n._)([(0,l.Cb)({type:[o.z8],json:{write:!0}})],t.prototype,"bandIds",void 0),(0,n._)([(0,O.r)("bandIds")],t.prototype,"readBandIds",null),(0,n._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],t.prototype,"capabilities",void 0),(0,n._)([(0,O.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],t.prototype,"readCapabilities",null),(0,n._)([(0,l.Cb)({type:Number})],t.prototype,"compressionQuality",void 0),(0,n._)([(0,p.c)("compressionQuality")],t.prototype,"writeCompressionQuality",null),(0,n._)([(0,l.Cb)({type:Number})],t.prototype,"compressionTolerance",void 0),(0,n._)([(0,p.c)("compressionTolerance")],t.prototype,"writeCompressionTolerance",null),(0,n._)([(0,l.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,n._)([(0,l.Cb)({type:String,json:{read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],t.prototype,"definitionExpression",void 0),(0,n._)([(0,l.Cb)({readOnly:!0,constructOnly:!0})],t.prototype,"exportImageServiceParameters",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"rasterInfo",void 0),(0,n._)([(0,l.Cb)({readOnly:!0,type:[z.Z]})],t.prototype,"fields",void 0),(0,n._)([(0,l.Cb)({readOnly:!0,dependsOn:["fields"]})],t.prototype,"fieldsIndex",null),(0,n._)([(0,l.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],t.prototype,"format",null),(0,n._)([(0,O.r)("service","format",["serviceDataType"])],t.prototype,"readFormat",null),(0,n._)([(0,l.Cb)({type:P.Z})],t.prototype,"fullExtent",void 0),(0,n._)([(0,l.Cb)({readOnly:!0})],t.prototype,"hasMultidimensions",void 0),(0,n._)([(0,l.Cb)({json:{read:{source:"maxImageHeight"}}})],t.prototype,"imageMaxHeight",void 0),(0,n._)([(0,l.Cb)({json:{read:{source:"maxImageWidth"}}})],t.prototype,"imageMaxWidth",void 0),(0,n._)([(0,l.Cb)({type:String,json:{type:Ee.jsonValues,read:Ee.read,write:Ee.write}})],t.prototype,"interpolation",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"minScale",void 0),(0,n._)([(0,O.r)("service","minScale")],t.prototype,"readMinScale",null),(0,n._)([(0,l.Cb)()],t.prototype,"maxScale",void 0),(0,n._)([(0,O.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,n._)([(0,l.Cb)({type:fe})],t.prototype,"mosaicRule",null),(0,n._)([(0,O.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],t.prototype,"readMosaicRule",null),(0,n._)([(0,p.c)("mosaicRule")],t.prototype,"writeMosaicRule",null),(0,n._)([(0,l.Cb)({readOnly:!0}),(0,C.B)("serviceRasterInfo.multidimensionalInfo")],t.prototype,"multidimensionalInfo",void 0),(0,n._)([(0,l.Cb)({json:{type:o.z8}})],t.prototype,"noData",void 0),(0,n._)([(0,p.c)("noData")],t.prototype,"writeNoData",null),(0,n._)([(0,l.Cb)({type:String,json:{type:Le.jsonValues,read:Le.read,write:Le.write}})],t.prototype,"noDataInterpretation",void 0),(0,n._)([(0,l.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],t.prototype,"objectIdField",void 0),(0,n._)([(0,O.r)("objectIdField")],t.prototype,"readObjectIdField",null),(0,n._)([(0,l.Cb)({readOnly:!0,dependsOn:["url"]})],t.prototype,"parsedUrl",null),(0,n._)([(0,l.Cb)({readOnly:!0}),(0,C.B)("serviceRasterInfo.pixelSize.x")],t.prototype,"pixelSizeX",void 0),(0,n._)([(0,l.Cb)({readOnly:!0}),(0,C.B)("serviceRasterInfo.pixelSize.y")],t.prototype,"pixelSizeY",void 0),(0,n._)([(0,l.Cb)({type:Function})],t.prototype,"pixelFilter",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"raster",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"viewId",void 0),(0,n._)([(0,l.Cb)({types:J.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:J.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type})}}}}})],t.prototype,"renderer",void 0),(0,n._)([(0,O.r)("renderer")],t.prototype,"readRenderer",null),(0,n._)([(0,l.Cb)(f.bT)],t.prototype,"opacity",void 0),(0,n._)([(0,l.Cb)({readOnly:!0}),(0,C.B)("serviceRasterInfo.attributeTable")],t.prototype,"rasterAttributeTable",void 0),(0,n._)([(0,l.Cb)({readOnly:!0,dependsOn:["fields","rasterInfo","capabilities"]})],t.prototype,"rasterFields",null),(0,n._)([(0,l.Cb)({readOnly:!0})],t.prototype,"rasterFunctionInfos",void 0),(0,n._)([(0,l.Cb)({type:$})],t.prototype,"renderingRule",null),(0,n._)([(0,O.r)("renderingRule",["renderingRule","rasterFunctionInfos"])],t.prototype,"readRenderingRule",null),(0,n._)([(0,p.c)("renderingRule")],t.prototype,"writeRenderingRule",null),(0,n._)([(0,l.Cb)()],t.prototype,"serviceDataType",void 0),(0,n._)([(0,l.Cb)({readOnly:!0,type:F.Z})],t.prototype,"spatialReference",void 0),(0,n._)([(0,O.r)("spatialReference",["spatialReference","extent"])],t.prototype,"readSpatialReference",null),(0,n._)([(0,l.Cb)({json:{type:ke.jsonValues}})],t.prototype,"pixelType",void 0),(0,n._)([(0,O.r)("pixelType")],t.prototype,"readPixelType",null),(0,n._)([(0,p.c)("pixelType")],t.prototype,"writePixelType",null),(0,n._)([(0,l.Cb)({constructOnly:!0,type:Re.Z})],t.prototype,"serviceRasterInfo",void 0),(0,n._)([(0,l.Cb)()],t.prototype,"sourceJSON",void 0),(0,n._)([(0,l.Cb)(f.HQ)],t.prototype,"url",void 0),(0,n._)([(0,l.Cb)({readOnly:!0})],t.prototype,"version",void 0),(0,n._)([(0,O.r)("version",["currentVersion","fields","timeInfo"])],t.prototype,"readVersion",null),t=(0,n._)([(0,u.j)("esri.layers.mixins.ArcGISImageService")],t),t};let Be=class extends((0,v.h)((0,x.n)((0,w.Q)((0,_.M)((0,g.q)((0,R.I)(Ze((0,b.Y)((0,y.R)(h.Z)))))))))){constructor(...e){super(...e),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=(0,s.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},e).then((()=>this._fetchService(t)),(()=>this._fetchService(t)))),(0,d.resolve)(this)}writeOperationalLayerType(e,t,r){var i;const n="vector-field"===(null==(i=this.renderer)?void 0:i.type);t[r]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(e){const t=this.rasterFields,r=this.title,i=new Set;let n=!1,s=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s=n&&("esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType));const a=new Set;n&&(a.add("raster.itempixelvalue"),s&&a.add("raster.magnitude").add("raster.direction"));for(const e of t){const t=e.name.toLowerCase();a.has(t)||t.indexOf("raster.servicepixelvalue.")>-1||i.add(e.name)}return(0,S.eZ)({fields:t,title:r},{...e,visibleFieldNames:i})}redraw(){this.emit("redraw")}};(0,n._)([(0,l.Cb)(f.rn)],Be.prototype,"legendEnabled",void 0),(0,n._)([(0,l.Cb)({type:["show","hide"]})],Be.prototype,"listMode",void 0),(0,n._)([(0,l.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Be.prototype,"isReference",void 0),(0,n._)([(0,l.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Be.prototype,"operationalLayerType",void 0),(0,n._)([(0,p.c)("web-map","operationalLayerType")],Be.prototype,"writeOperationalLayerType",null),(0,n._)([(0,l.Cb)(f.C_)],Be.prototype,"popupEnabled",void 0),(0,n._)([(0,l.Cb)({type:m.default,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Be.prototype,"popupTemplate",void 0),(0,n._)([(0,l.Cb)({readOnly:!0,dependsOn:["fields","title"]})],Be.prototype,"defaultPopupTemplate",null),(0,n._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],Be.prototype,"type",void 0),Be=(0,n._)([(0,u.j)("esri.layers.ImageryLayer")],Be);const Qe=Be}}]);
//# sourceMappingURL=928.js.map