(self.webpackChunkinspection_scheduler=self.webpackChunkinspection_scheduler||[]).push([[2386],{42386:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>w});var i=r(56140),a=(r(95830),r(36544),r(68055),r(79881)),o=r(30590),n=r(87566),l=(r(10923),r(57002),r(86035),r(73032)),s=r(52937),p=(r(36348),r(83477)),c=r(56700),d=r(43072),y=r(78910),u=r(57407),h=r(33716),m=r(10113),f=r(76603),b=r(99322);let C=class extends((0,u.h)((0,m.M)((0,y.q)((0,h.I)((0,d.R)(c.Z)))))){constructor(e){super(e),this.capabilities={operations:{supportsEditing:!0}},this.legendEnabled=!1,this.lineGraphics=new b.ZP,this.opacity=1,this.pointGraphics=new b.ZP,this.polygonGraphics=new b.ZP,this.textGraphics=new b.ZP,this.type="map-notes"}readFullExtent(e,t){if(!t.layers.length)return new s.Z({xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:l.Z.WGS84});const r=l.Z.fromJSON(t.layers[0].layerDefinition.spatialReference);return t.layers.reduce(((e,t)=>{const r=t.layerDefinition.extent;return r?s.Z.fromJSON(r).union(e):e}),new s.Z({spatialReference:r}))}readCapabilities(e,t){return{operations:{supportsEditing:!t.layers.some((e=>!!e.layerDefinition.drawingInfo))}}}readFeatureCollections(e,t,r){const i=t.layers.map((e=>{const t=new f.default;return t.read(e,r),t}));return new p.Z({items:i})}readMinScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.minScale)return e.layerDefinition.minScale;return 0}readMaxScale(e,t){for(const e of t.layers)if(null!=e.layerDefinition.maxScale)return e.layerDefinition.maxScale;return 0}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Feature Collection"]},e)),Promise.resolve(this)}read(e,t){"featureCollection"in e&&super.read(e.featureCollection,t),super.read(e,t)}};(0,i._)([(0,o.r)(["web-map","portal-item"],"fullExtent",["layers"])],C.prototype,"readFullExtent",null),(0,i._)([(0,a.Cb)({readOnly:!0})],C.prototype,"capabilities",void 0),(0,i._)([(0,o.r)(["portal-item","web-map"],"capabilities",["layers"])],C.prototype,"readCapabilities",null),(0,i._)([(0,a.Cb)({readOnly:!0})],C.prototype,"featureCollections",void 0),(0,i._)([(0,o.r)(["web-map","portal-item"],"featureCollections",["layers"])],C.prototype,"readFeatureCollections",null),(0,i._)([(0,a.Cb)({readOnly:!0,json:{origins:{service:{read:{enabled:!1}}},name:"showLegend",write:!0}})],C.prototype,"legendEnabled",void 0),(0,i._)([(0,a.Cb)((0,b.$o)("lineGraphics"))],C.prototype,"lineGraphics",void 0),(0,i._)([(0,a.Cb)({type:["show","hide"]})],C.prototype,"listMode",void 0),(0,i._)([(0,o.r)(["web-map","portal-item"],"minScale",["layers"])],C.prototype,"readMinScale",null),(0,i._)([(0,o.r)(["web-map","portal-item"],"maxScale",["layers"])],C.prototype,"readMaxScale",null),(0,i._)([(0,a.Cb)({type:Number,json:{name:"opacity",write:!0}})],C.prototype,"opacity",void 0),(0,i._)([(0,a.Cb)((0,b.$o)("pointGraphics"))],C.prototype,"pointGraphics",void 0),(0,i._)([(0,a.Cb)((0,b.$o)("polygonGraphics"))],C.prototype,"polygonGraphics",void 0),(0,i._)([(0,a.Cb)((0,b.$o)("textGraphics"))],C.prototype,"textGraphics",void 0),(0,i._)([(0,a.Cb)({readOnly:!0,json:{read:!1}})],C.prototype,"type",void 0),C=(0,i._)([(0,n.j)("esri.layers.MapNotesLayer")],C);const w=C}}]);
//# sourceMappingURL=2386.js.map